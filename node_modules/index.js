var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);

app.get('/', function(req, res){
  res.sendFile(__dirname + '/index.html');
});

io.on('connection', function(socket){
console.log('connected..');
  socket.on('chat message', function(msg){
     if(!_loop(msg))
    	io.emit('chat message', msg);
  });
});

http.listen(3000, function(){
  console.log('listening on *:3000');
});


function _verifyword(m)
{
//setup word list to test out this and could ideally store to a 
//persistent storage for flexibility over an API.
var word_list = ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "a10",
"b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "b9", "b10",
"c1", "c2", "c3", "c4", "c5", "c6", "c7", "c8", "c9", "c10",
"d1", "d2", "d3", "d4", "d5", "d6", "d7", "d8", "d9", "d10",
"e1", "e2", "e3", "e4", "e5", "e6", "e7", "e8", "e9", "e10",
"f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10",
"g1", "g2", "g3", "g4", "g5", "g6", "g7", "g8", "g9", "g10",
"h1", "h2", "h3", "h4", "h5", "h6", "h7", "h8", "h9", "h10",
"i1", "i2", "i3", "i4", "i5", "i6", "i7", "i8", "i9", "i10",
"j1", "j2", "j3", "j4", "j5", "j6", "j7", "j8", "j9", "j10"];

var ret = false;
if (word_list.indexOf(m) > -1)
	ret = true;

console.log('word sent: ', m + " - " + ret);

return ret;

};

function _decompose(m)
{
//this version assumes for demo using
//regular expression to decomposee the message first.
//a whitespace is used to seperate the words.
//This will not cover all the cases, but use for demo purpose only.
//cap message length at 140

res = "";
if (m.length > 0 and m.length < 100) 
return res = m.toLowerCase().match(/[\w'-]+/g);

return res;
	
}

function _loop(m)
{
	var detected = false;
	var msg = _decompose(m);
	for (var i=0; i < msg.length; i++)
	{
		if(_verifyword(msg[i]))
		{	detected = true; break;
		}
	}

	return detected;
}
